/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.DoctorRole;

import Business.Person.Person;
import Business.Person.VitalSign;
import java.awt.CardLayout;
import java.awt.Color;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartFrame;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;

/**
 *
 * @author anike
 */
public class ViewVitalSignHistoryJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ViewVitalSignHistoryJPanel
     */
    private Person person;
    JPanel upc;
    public ViewVitalSignHistoryJPanel(JPanel userContainer, Person person) {
        initComponents();
        this.upc = userContainer;
        this.person = person;
        tblViewVitalSign.getTableHeader().setForeground(new Color(0,153,255));
        populateTable();
    }

    
    public void populateTable(){
        DefaultTableModel dbl = (DefaultTableModel) tblViewVitalSign.getModel();
        dbl.setRowCount(0);
        for(VitalSign vs:person.getVsignHist().getVitalHistory()){
            if(vs == null){
                JOptionPane.showMessageDialog(null, "No vital sign history to be displayed");
                return;
            }
            Object [] row = new Object[2];
            row[0]= vs;
            row[1]= vs.getVitalSign();
            dbl.addRow(row);
        }
    }
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnViewChart = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        btnrespiratory = new javax.swing.JButton();
        btnBloodPressure = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblViewVitalSign = new javax.swing.JTable();
        btnDelete = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtmed = new javax.swing.JTextArea();
        jLabel4 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));

        btnViewChart.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnViewChart.setForeground(new java.awt.Color(0, 204, 255));
        btnViewChart.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Business/Images/bar-chart.png"))); // NOI18N
        btnViewChart.setText("Heart Rate Chart");
        btnViewChart.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnViewChart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewChartActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 204, 255));
        jLabel1.setText("Vital Sign History Table");

        btnrespiratory.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnrespiratory.setForeground(new java.awt.Color(0, 204, 255));
        btnrespiratory.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Business/Images/bar-chart.png"))); // NOI18N
        btnrespiratory.setText("Respiratory Rate Chart");
        btnrespiratory.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnrespiratory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnrespiratoryActionPerformed(evt);
            }
        });

        btnBloodPressure.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnBloodPressure.setForeground(new java.awt.Color(0, 204, 255));
        btnBloodPressure.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Business/Images/bar-chart.png"))); // NOI18N
        btnBloodPressure.setText("Blood Pressure Chart");
        btnBloodPressure.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnBloodPressure.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBloodPressureActionPerformed(evt);
            }
        });

        btnBack.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnBack.setForeground(new java.awt.Color(0, 204, 255));
        btnBack.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Business/Images/back.jpg"))); // NOI18N
        btnBack.setText("Back");
        btnBack.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        tblViewVitalSign.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        tblViewVitalSign.setForeground(new java.awt.Color(0, 204, 255));
        tblViewVitalSign.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Time Stamp", "Vital Sign"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblViewVitalSign.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblViewVitalSignMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblViewVitalSign);

        btnDelete.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnDelete.setForeground(new java.awt.Color(0, 204, 255));
        btnDelete.setText("Delete");
        btnDelete.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 153, 255));
        jLabel2.setText("View Vital Signs History");

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Business/utils/user_login_man_profile_account-128.png"))); // NOI18N

        jLabel9.setText("You are currently logged in.");

        jTextArea1.setEditable(false);
        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane2.setViewportView(jTextArea1);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 204, 255));
        jLabel3.setText("Examination Results");

        txtmed.setEditable(false);
        txtmed.setColumns(20);
        txtmed.setRows(5);
        jScrollPane3.setViewportView(txtmed);

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 204, 255));
        jLabel4.setText("Medicine Prescribed if any");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(93, 93, 93)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(226, 226, 226)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(114, 114, 114)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnViewChart, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane3)
                            .addComponent(btnrespiratory, javax.swing.GroupLayout.DEFAULT_SIZE, 213, Short.MAX_VALUE)
                            .addComponent(btnBloodPressure, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane2)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(163, 163, 163)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel9)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addGap(12, 12, 12)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(jLabel2))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel9)))
                .addGap(28, 28, 28)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnrespiratory, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnViewChart, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnBloodPressure, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(51, 51, 51)
                .addComponent(btnBack)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnViewChartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewChartActionPerformed
        // TODO add your handling code here:
        checkVitalHist();
        DefaultCategoryDataset dataset = new DefaultCategoryDataset();
        for (VitalSign v : person.getVsignHist().getVitalHistory()) {
            dataset.setValue(v.getHeartRate(), "Heart", v.getTimeStmp());
        }
        JFreeChart chart = ChartFactory.createBarChart("Heart Rate Stats", "Date", "Rate",
            dataset, PlotOrientation.VERTICAL, false, true, false);
        CategoryPlot catPlot = chart.getCategoryPlot();
        catPlot.setRangeGridlinePaint(Color.BLACK);
        ChartFrame frame = new ChartFrame("Bar", chart);
        frame.setVisible(true);
        frame.setSize(450,350);

    }//GEN-LAST:event_btnViewChartActionPerformed

    private void btnrespiratoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnrespiratoryActionPerformed
        // TODO add your handling code here:
        checkVitalHist();
        DefaultCategoryDataset dataset = new DefaultCategoryDataset();
        for (VitalSign v : person.getVsignHist().getVitalHistory()) {
            dataset.setValue(v.getRespiratoryRate(), "Respiratory Rate", v.getTimeStmp());
        }
        JFreeChart chart = ChartFactory.createBarChart("Respiratory Rate Stats", "Date", "Rate",
            dataset, PlotOrientation.VERTICAL, false, true, false);
        CategoryPlot catPlot = chart.getCategoryPlot();
        catPlot.setRangeGridlinePaint(Color.BLACK);
        ChartFrame frame = new ChartFrame("Bar", chart);
        frame.setVisible(true);
        frame.setSize(450,350);
    }//GEN-LAST:event_btnrespiratoryActionPerformed

    private void btnBloodPressureActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBloodPressureActionPerformed
        // TODO add your handling code here:
        checkVitalHist();
        DefaultCategoryDataset dataset = new DefaultCategoryDataset();
        for (VitalSign v : person.getVsignHist().getVitalHistory()) {
            dataset.setValue(v.getSystolicBloodpressure(), "Blood Pressure Rate", v.getTimeStmp());
        }
        JFreeChart chart = ChartFactory.createBarChart("Blood Pressure Stats", "Date", "Rate",
            dataset, PlotOrientation.VERTICAL, false, true, false);
        CategoryPlot catPlot = chart.getCategoryPlot();
        catPlot.setRangeGridlinePaint(Color.BLACK);
        ChartFrame frame = new ChartFrame("Bar", chart);
        frame.setVisible(true);
        frame.setSize(450,350);

    }//GEN-LAST:event_btnBloodPressureActionPerformed
    
    private void checkVitalHist() {
        for (VitalSign vs : person.getVsignHist().getVitalHistory()) {
            if (vs == null) {
                JOptionPane.showMessageDialog(null, "No vital sign history to be displayed");
                return;
            }
        }
    }
    
    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed

        upc.remove(this);
        CardLayout layout = (CardLayout) upc.getLayout();
        layout.previous(upc);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        int selectedrow = tblViewVitalSign.getSelectedRow();
        if(selectedrow<0){
            JOptionPane.showMessageDialog(null,"please select vital sign");
            return;
        }
        VitalSign vs =(VitalSign) tblViewVitalSign.getValueAt(selectedrow,0);
        person.getVsignHist().deleteVitalSign(vs);
        populateTable();
        jTextArea1.setText("");
        txtmed.setText("");
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void tblViewVitalSignMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblViewVitalSignMouseClicked
        // TODO add your handling code here:
        int selectedrow = tblViewVitalSign.getSelectedRow();
        if(selectedrow<0){
            JOptionPane.showMessageDialog(null,"please select vital sign");
            return;
        }
        VitalSign vs =(VitalSign) tblViewVitalSign.getValueAt(selectedrow,0);
        jTextArea1.setText(vs.getExaminationResult());
        txtmed.setText(vs.getPrescribedMedicine());
    }//GEN-LAST:event_tblViewVitalSignMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnBloodPressure;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnViewChart;
    private javax.swing.JButton btnrespiratory;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTable tblViewVitalSign;
    private javax.swing.JTextArea txtmed;
    // End of variables declaration//GEN-END:variables
}
