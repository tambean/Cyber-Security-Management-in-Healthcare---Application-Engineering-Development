/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface;

import Business.ConfigureEcoSystem;
import Business.DB4OUtil.DB4OUtil;
import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Network.Network;
import Business.Organization.Organization;
import Business.Role.Role;
import Business.UserAccount.UserAccount;
import Business.Utils.SendMails;
import Business.WorkQueue.WorkRequest;
import Business.Utils.InactivityListener;
import java.awt.CardLayout;
import java.awt.event.ActionEvent;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileWriter;
import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.Scanner;
import java.util.Set;
import java.util.logging.FileHandler;
import java.util.logging.Logger;
import java.util.logging.SimpleFormatter;
import javax.swing.AbstractAction;
import javax.swing.Action;
import javax.swing.ImageIcon;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.Timer;


/**
 *
 * @author anike
 */
public class Mainframe extends javax.swing.JFrame {

    /**
     * Creates new form Mainframe
     */
    private DB4OUtil dB4OUtil = DB4OUtil.getInstance();
    private int counter;
    static Thread thread;
    private EcoSystem system;
    Logger logger = Logger.getLogger("MyLog");
    private String name;
    private boolean org_check = false;
    private boolean user_check = false;
    FileHandler fh;
    public Mainframe() {
        initComponents();        
         system = dB4OUtil.retrieveSystem();
         counter = 0;
         name = null;
         btnLogOut.setEnabled(false);
         setResizable(false);
         
    }
    
    
    private void wirteToLogFile(String str) {
        
        String workingdirectory = System.getProperty("user.dir");
        workingdirectory += "\\log\\";
        workingdirectory += "log.txt";
        String userName = txtUserName.getText();
        if (!(userName.matches("sysadmin"))) {
            String date = new SimpleDateFormat("yyyy.MM.dd.HH.mm.ss").format(new java.util.Date());
            File f = new File(workingdirectory);
            if (f.exists() && !f.isDirectory()) {
                try {
                    FileWriter fw = new FileWriter(workingdirectory, true); //the true will append the new data
                    fw.write(name + "=" + date + "->" + str);//appends the string to the file
                    fw.write(System.getProperty("line.separator"));
                    fw.close();
                } catch (IOException ioe) {
                    System.err.println("IOException: " + ioe.getMessage());
                }
            } else {
                try {
                    FileWriter fw = new FileWriter(workingdirectory);
                    fw.write("Log File containing user credentials in below format");
                    fw.write(System.getProperty("line.separator"));
                    fw.write("UserName = TimeStamp \n");
                    fw.write(System.getProperty("line.separator"));
                    fw.write(name + "=" + date + "->" + str);
                    fw.write(System.getProperty("line.separator"));
                    fw.close();
                } catch (IOException ioe) {
                    System.err.println("IOException: " + ioe.getMessage());
                }
            }
        }
    }
    
    
    
    
    private void Logfile() {

        try {
            if (fh == null) {
                fh = new FileHandler("E:\\AED\\Project\\My_Proj\\Proj\\log\\MyLogFile.log");
            }
            logger.addHandler(fh);
            SimpleFormatter formatter = new SimpleFormatter();
            fh.setFormatter(formatter);
            logger.setUseParentHandlers(false);
        } catch (IOException e) {
            e.printStackTrace();
        }
        
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSplitPane1 = new javax.swing.JSplitPane();
        jPanel1 = new javax.swing.JPanel();
        txtUserName = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        btnLogin = new javax.swing.JButton();
        btnLogOut = new javax.swing.JButton();
        txtPassword = new javax.swing.JPasswordField();
        jLabel3 = new javax.swing.JLabel();
        userprocessContainer = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new java.awt.CardLayout());

        jSplitPane1.setBackground(new java.awt.Color(255, 255, 255));
        jSplitPane1.setDividerLocation(350);
        jSplitPane1.setMaximumSize(new java.awt.Dimension(1120, 800));
        jSplitPane1.setMinimumSize(new java.awt.Dimension(500, 800));
        jSplitPane1.setPreferredSize(new java.awt.Dimension(1120, 800));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        txtUserName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtUserNameActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(51, 153, 255));
        jLabel1.setText("User Name");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 153, 255));
        jLabel2.setText("Password");

        btnLogin.setBackground(new java.awt.Color(255, 255, 255));
        btnLogin.setForeground(new java.awt.Color(51, 51, 255));
        btnLogin.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Business/utils/login-button-blue-hi.png"))); // NOI18N
        btnLogin.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoginActionPerformed(evt);
            }
        });

        btnLogOut.setForeground(new java.awt.Color(255, 0, 51));
        btnLogOut.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Business/utils/logout-button-blue-hi.png"))); // NOI18N
        btnLogOut.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnLogOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogOutActionPerformed(evt);
            }
        });

        txtPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPasswordActionPerformed(evt);
            }
        });

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Business/utils/images.jpg"))); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtPassword, javax.swing.GroupLayout.DEFAULT_SIZE, 226, Short.MAX_VALUE)
                            .addComponent(txtUserName)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(97, 97, 97)
                        .addComponent(jLabel2))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(btnLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnLogOut, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(89, 89, 89)
                        .addComponent(jLabel1)))
                .addGap(24, 24, 24))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addGap(41, 41, 41)
                .addComponent(txtUserName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(80, 80, 80)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnLogOut, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jSplitPane1.setLeftComponent(jPanel1);

        userprocessContainer.setBackground(new java.awt.Color(255, 255, 255));
        userprocessContainer.setLayout(new java.awt.CardLayout());

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Business/utils/8f4736ae-b426-4bb1-8653-bb09c6bf00c0.jpg"))); // NOI18N
        jLabel4.setToolTipText("");
        jLabel4.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        jLabel4.setMaximumSize(new java.awt.Dimension(524, 800));
        jLabel4.setMinimumSize(new java.awt.Dimension(350, 600));
        jLabel4.setPreferredSize(new java.awt.Dimension(600, 700));
        userprocessContainer.add(jLabel4, "card2");

        jSplitPane1.setRightComponent(userprocessContainer);

        getContentPane().add(jSplitPane1, "card2");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnLogOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogOutActionPerformed
        // TODO add your handling code here:
        
        btnLogOut.setEnabled(false);
        txtUserName.setEnabled(true);
        txtPassword.setEnabled(true);
        btnLogin.setEnabled(true);
        userprocessContainer.removeAll();
        JPanel blankJP = new JPanel();
        userprocessContainer.add("blank", blankJP);
        CardLayout crdLyt = (CardLayout) userprocessContainer.getLayout();
        crdLyt.next(userprocessContainer);
        JOptionPane.showMessageDialog(null, "Logout Successful!");
        org_check = false;
        wirteToLogFile("Logout Successful!");
        //Logfile();
        txtUserName.setText("");
        txtPassword.setText("");
        dB4OUtil.storeSystem(system);
    }//GEN-LAST:event_btnLogOutActionPerformed

    private void btnLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoginActionPerformed
        // TODO add your handling code here:
        
        String userName = txtUserName.getText();
        name = txtUserName.getText();
        boolean permission = false;
        // Get Password
        char[] passwordCharArray = txtPassword.getPassword();
        String password = String.valueOf(passwordCharArray);
       
        //Step1: Check in the system user account directory if you have the user
        UserAccount userAccount = system.getUserAccountDirectory().authenticateUser(userName, password);
        Enterprise inEnterprise = null;
        Network inNetwork = null;
        Organization inOrganization = null;
        if (counter < 4) {
            if (userAccount == null) {
                //Step2: Go inside each network to check each enterprise
                for (Network network : system.getNetworkList()) {
                    //Step 2-a: Check against each enterprise
                    for (Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriseList()) {
                        userAccount = enterprise.getUserAccountDirectory().authenticateUser(userName, password);
                        if (userAccount == null) {
                            //Step3: Check against each organization inside that enterprise
                            for (Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()) {
                                userAccount = organization.getUserAccountDirectory().authenticateUser(userName, password);
                                if (userAccount != null) {
                                    inNetwork = network;
                                    inEnterprise = enterprise;
                                    inOrganization = organization;
                                    org_check = true;
                                    break;
                                }
                            }
                        } else {
                            inNetwork = network;
                            inEnterprise = enterprise;
                            permission = true;
                            break;
                        }
                        if (inOrganization != null) {
                            break;
                        }
                    }
                    if (inEnterprise != null) {
                        break;
                    }
                }
            }
            else{
                permission = true;
            }

            if (userAccount == null) {
                JOptionPane.showMessageDialog(null, "Invalid Credentails!");                
                txtPassword.setText("");
                txtUserName.setText("");             
                counter++;
                String tmp = "Invalid Credentails!" + Integer.toString(counter);
                wirteToLogFile(tmp);
                //Logfile();
                return;
            } else {    
                
                if (org_check) {
                    checkUser();
                    permission = user_check;
                }
                if (!permission) {
                    JOptionPane.showMessageDialog(null, "Not an Authentic User");
                    btnLogin.setEnabled(true);
                    //btnLogOut.setEnabled(true);
                    txtPassword.setText("");
                    txtUserName.setText("");
                    txtUserName.setEnabled(true);
                    txtPassword.setEnabled(true);
                    return;

                }
                    JOptionPane.showMessageDialog(null, "Login Successful!");
                    CardLayout layout = (CardLayout) userprocessContainer.getLayout();
                    userprocessContainer.add("workArea", userAccount.getRole().createWorkArea(userprocessContainer, userAccount, inOrganization, inEnterprise,inNetwork, system));
                    layout.next(userprocessContainer);
                    InactivityListener listener = new InactivityListener(userprocessContainer);
                    listener.start();
                    wirteToLogFile("Login Successful!");
               
                
                //Logfile();
            }
            txtUserName.setText("********");
            btnLogin.setEnabled(false);
            btnLogOut.setEnabled(true);
            txtUserName.setEnabled(false);
            txtPassword.setEnabled(false);
        } else {
            btnLogin.setEnabled(false);
            btnLogOut.setEnabled(false);
            txtUserName.setEnabled(false);
            txtPassword.setEnabled(false);
            JOptionPane.showMessageDialog(null, "Your have exceeded the invalid login attempts!");
            String id = null;
            
            for (UserAccount acc : system.getUserAccountDirectory().getUserAccountList()) {
         
                if (acc.getRole().toString().matches(Role.RoleType.Admin.toString())) {
                    id = acc.getEmployee().getEmailid();
                }
            }
            SendEmail(id);
            thread = new Thread();
            for (int i =5; i >= 0; i--) {
                try {
                    thread.sleep(10);
                    JOptionPane.showMessageDialog(null, "Timer =" + i);
                } catch (InterruptedException ioe) {
                    System.err.println("InterruptedException: " + ioe.getMessage());
                }
            }
            counter = 0;
            btnLogin.setEnabled(true);
            btnLogOut.setEnabled(true);
            txtPassword.setText("");
            txtUserName.setText("");
            txtUserName.setEnabled(true);
            txtPassword.setEnabled(true);
           // Logfile();
            return;
        }
    }//GEN-LAST:event_btnLoginActionPerformed

    private void checkUser() {

        String workingdirectory = System.getProperty("user.dir");
        workingdirectory += "\\authentication";

        File folder = new File(workingdirectory);
        File[] listOfFiles = folder.listFiles();

        for (int i = 0; i < listOfFiles.length; i++) {
            if (listOfFiles[i].isFile()) {
                File file = new File(workingdirectory +"\\"+ listOfFiles[i].getName());
                try {
                    Scanner scanner = new Scanner(file);
                    int lineNum = 0;
                    while (scanner.hasNextLine()) {
                        String line = scanner.nextLine();
                        lineNum++;
                        if (line.startsWith(txtUserName.getText().trim())) {
                            user_check = true;
                            break;
                        } else {
                            user_check = false;
                        }
                    }
                } catch (FileNotFoundException e) {
                    //JOptionPane.showMessageDialog(null, "Authentication file absent");
                    user_check = false;
                }
            }
            if(user_check){
                break;
            }
        }
    }

    private void txtPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPasswordActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPasswordActionPerformed

    private void txtUserNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtUserNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtUserNameActionPerformed

    
    public void SendEmail(String toMail) {

        String mailTo = new String(toMail);
        String mailSubject = new String("Invalid credentials login attempted");
        String mailText = new String("Reported");
        SendMails newGmailClient = new SendMails();
        newGmailClient.setAccountDetails();
        String mailFrom = newGmailClient.getMailId();
        newGmailClient.sendGmail(mailFrom, mailTo, mailSubject, mailText);
    }
   
     
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {            
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName()); 
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Mainframe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Mainframe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Mainframe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Mainframe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {            
                new Mainframe().setVisible(true);
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnLogOut;
    private javax.swing.JButton btnLogin;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JPasswordField txtPassword;
    private javax.swing.JTextField txtUserName;
    private javax.swing.JPanel userprocessContainer;
    // End of variables declaration//GEN-END:variables
}
